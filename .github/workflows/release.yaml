name: Build for All platforms
on:
  push:
    tags:
      - 'v*.*.*'

env:
  CI: false

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Build Wallet
        uses: ./.github/actions/build

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android build environment
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for gradlew
        run: chmod +x ./android/gradlew

      - name: Update AndroidManifest.xml
        uses: damienaicheh/update-android-version-manifest-action@v1.0.0
        with:
          android-manifest-path: './android/app/src/main/AndroidManifest.xml'
          version-code: ${{ env.NUMBER_OF_COMMITS }}
          version-name: '${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}${{ env.PRE_RELEASE }}'
          print-file: true

      - name: Update gradle version for Android
        uses: damienaicheh/update-android-version-gradle-action@v1.0.0
        with:
          build-gradle-path: './android/app/build.gradle'
          version-code: ${{ env.NUMBER_OF_COMMITS }}
          version-name: '${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}${{ env.PRE_RELEASE }}'
          print-file: true

      - name: Build app bundle
        working-directory: android
        run: ./gradlew clean app:assembleRelease

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        env:
          BUILD_TOOLS_VERSION: 34.0.0
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEYSTORE }}
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: move apk to root directory
        run: mv ${{steps.sign_app.outputs.signedReleaseFile}} minotaur-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}${{ env.PRE_RELEASE }}.apk

      - name: Upload Apk File to release
        uses: softprops/action-gh-release@v1
        with:
          files: minotaur-*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  desktop:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            extension: AppImage
          - os: windows-latest
            platform: Windows
            extension: exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Build Wallet
        uses: ./.github/actions/build

      - name: Remove icns from assets
        run: rm electron/assets/appIcon.icns

      - name: Build Electron
        working-directory: ./electron
        run: npm i; npm run electron:make

      - name: Upload Executable File to release
        uses: softprops/action-gh-release@v1
        with:
          files: electron/dist/minotaur-*.${{ matrix.extension }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  macos:
    runs-on: 'macos-latest'
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Build Wallet
        uses: ./.github/actions/build

      - name: Create P12 Certificate File
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'Minotaur.p12'
          encodedString: ${{ secrets.CERT_P12 }}

      - name: Create CRT Certificate File
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'Minotaur.crt'
          encodedString: ${{ secrets.CERT_CRT }}

      - name: Import P12
        run: sudo security import Minotaur.p12 -k "$HOME/Library/Keychains/login.keychain" -P ${{ secrets.CERT_PASS }} -A

      - name: Trust Installed Certificate
        run: sudo security add-trusted-cert -d -r trustRoot -k "$HOME/Library/Keychains/login.keychain" Minotaur.crt

      - name: Build Electron
        working-directory: ./electron
        env:
          CSC_LINK: ${{ secrets.CERT_P12 }}
          CSC_KEY_PASSWORD: ${{ secrets.CERT_PASS }}
        run: npm i; npm run electron:make

      - name: Upload Executable File to release
        uses: softprops/action-gh-release@v1
        with:
          files: electron/dist/minotaur-*.${{ matrix.extension }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
